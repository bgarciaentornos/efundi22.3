
package za.ac.nwu.wsdl.courseoffering;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "CourseOfferingService", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CourseOfferingService {


    /**
     * 
     * @param contextInfo
     * @return
     *     returns java.lang.String
     * @throws OperationFailedException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws MissingParameterException_Exception
     * @throws DoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetService", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.ResetService")
    @ResponseWrapper(localName = "resetServiceResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.ResetServiceResponse")
    public String resetService(
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param moduleNumber
     * @param contextInfo
     * @param systemLanguageTypeKey
     * @param academicPeriod
     * @param presentationLocationTypeKey
     * @param moduleSubjectCode
     * @return
     *     returns java.util.List<za.ac.nwu.wsdl.courseoffering.ModulePresentationLocationInfo>
     * @throws OperationFailedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws MissingParameterException_Exception
     * @throws DoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModulePresentationLocationByType", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModulePresentationLocationByType")
    @ResponseWrapper(localName = "getModulePresentationLocationByTypeResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModulePresentationLocationByTypeResponse")
    public List<ModulePresentationLocationInfo> getModulePresentationLocationByType(
        @WebParam(name = "academicPeriod", targetNamespace = "")
        AcademicPeriodInfo academicPeriod,
        @WebParam(name = "moduleSubjectCode", targetNamespace = "")
        String moduleSubjectCode,
        @WebParam(name = "moduleNumber", targetNamespace = "")
        String moduleNumber,
        @WebParam(name = "presentationLocationTypeKey", targetNamespace = "")
        String presentationLocationTypeKey,
        @WebParam(name = "systemLanguageTypeKey", targetNamespace = "")
        String systemLanguageTypeKey,
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param contextInfo
     * @param moduleOfferingSearchCriteriaInfo
     * @param systemLanguageTypeKey
     * @return
     *     returns java.util.List<za.ac.nwu.wsdl.courseoffering.ModuleOfferingInfo>
     * @throws OperationFailedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws MissingParameterException_Exception
     * @throws DoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModuleOfferingBySearchCriteria", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingBySearchCriteria")
    @ResponseWrapper(localName = "getModuleOfferingBySearchCriteriaResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingBySearchCriteriaResponse")
    public List<ModuleOfferingInfo> getModuleOfferingBySearchCriteria(
        @WebParam(name = "moduleOfferingSearchCriteriaInfo", targetNamespace = "")
        ModuleOfferingSearchCriteriaInfo moduleOfferingSearchCriteriaInfo,
        @WebParam(name = "systemLanguageTypeKey", targetNamespace = "")
        String systemLanguageTypeKey,
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param moduleNumber
     * @param moduleSite
     * @param methodOfDeliveryTypeKey
     * @param contextInfo
     * @param systemLanguageTypeKey
     * @param academicPeriod
     * @param presentationLocationTypeKey
     * @param moduleSubjectCode
     * @param modeOfDeliveryTypeKey
     * @return
     *     returns java.util.List<za.ac.nwu.wsdl.courseoffering.ModuleOfferingPresentationLocationInfo>
     * @throws OperationFailedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws MissingParameterException_Exception
     * @throws DoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModuleOfferingPresentationLocation", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingPresentationLocation")
    @ResponseWrapper(localName = "getModuleOfferingPresentationLocationResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingPresentationLocationResponse")
    public List<ModuleOfferingPresentationLocationInfo> getModuleOfferingPresentationLocation(
        @WebParam(name = "academicPeriod", targetNamespace = "")
        AcademicPeriodInfo academicPeriod,
        @WebParam(name = "moduleSubjectCode", targetNamespace = "")
        String moduleSubjectCode,
        @WebParam(name = "moduleNumber", targetNamespace = "")
        String moduleNumber,
        @WebParam(name = "presentationLocationTypeKey", targetNamespace = "")
        String presentationLocationTypeKey,
        @WebParam(name = "moduleSite", targetNamespace = "")
        String moduleSite,
        @WebParam(name = "methodOfDeliveryTypeKey", targetNamespace = "")
        String methodOfDeliveryTypeKey,
        @WebParam(name = "modeOfDeliveryTypeKey", targetNamespace = "")
        String modeOfDeliveryTypeKey,
        @WebParam(name = "systemLanguageTypeKey", targetNamespace = "")
        String systemLanguageTypeKey,
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param moduleNumber
     * @param moduleSite
     * @param methodOfDeliveryTypeKey
     * @param contextInfo
     * @param academicPeriod
     * @param moduleSubjectCode
     * @param modeOfDeliveryTypeKey
     * @return
     *     returns za.ac.nwu.wsdl.courseoffering.ModuleOfferingFeeInfo
     * @throws OperationFailedException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws DoesNotExistException_Exception
     * @throws MissingParameterException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModuleOfferingFee", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingFee")
    @ResponseWrapper(localName = "getModuleOfferingFeeResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingFeeResponse")
    public ModuleOfferingFeeInfo getModuleOfferingFee(
        @WebParam(name = "academicPeriod", targetNamespace = "")
        AcademicPeriodInfo academicPeriod,
        @WebParam(name = "moduleSubjectCode", targetNamespace = "")
        String moduleSubjectCode,
        @WebParam(name = "moduleNumber", targetNamespace = "")
        String moduleNumber,
        @WebParam(name = "moduleSite", targetNamespace = "")
        String moduleSite,
        @WebParam(name = "methodOfDeliveryTypeKey", targetNamespace = "")
        String methodOfDeliveryTypeKey,
        @WebParam(name = "modeOfDeliveryTypeKey", targetNamespace = "")
        String modeOfDeliveryTypeKey,
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param contextInfo
     * @param systemLanguageTypeKey
     * @param moduleOfferingStudyMaterialSearchCriteriaInfo
     * @return
     *     returns java.util.List<za.ac.nwu.wsdl.courseoffering.StudentModuleOfferingStudyMaterialInfo>
     * @throws OperationFailedException_Exception
     * @throws InvalidParameterException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws MissingParameterException_Exception
     * @throws DoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModuleOfferingStudyMaterialBySearchCriteria", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingStudyMaterialBySearchCriteria")
    @ResponseWrapper(localName = "getModuleOfferingStudyMaterialBySearchCriteriaResponse", targetNamespace = "http://nwu.ac.za/wsdl/CourseOffering", className = "za.ac.nwu.wsdl.courseoffering.GetModuleOfferingStudyMaterialBySearchCriteriaResponse")
    public List<StudentModuleOfferingStudyMaterialInfo> getModuleOfferingStudyMaterialBySearchCriteria(
        @WebParam(name = "moduleOfferingStudyMaterialSearchCriteriaInfo", targetNamespace = "")
        ModuleOfferingStudyMaterialSearchCriteriaInfo moduleOfferingStudyMaterialSearchCriteriaInfo,
        @WebParam(name = "systemLanguageTypeKey", targetNamespace = "")
        String systemLanguageTypeKey,
        @WebParam(name = "contextInfo", targetNamespace = "")
        ContextInfo contextInfo)
        throws DoesNotExistException_Exception, InvalidParameterException_Exception, MissingParameterException_Exception, OperationFailedException_Exception, PermissionDeniedException_Exception
    ;

}
